
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/babel-polyfill/7.4.0/polyfill.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/exceljs/4.1.1/exceljs.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.2/FileSaver.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.0.0/jspdf.umd.min.js"></script>

    <script>
        var salesPivotGrid = null;
        var objectotest = null;
        let fechaI;
        let fechaF;
        $(document).ready(function () {
            DevExpress.localization.locale(navigator.language);
            fechaI = new AirDatepicker('#txtAnioI', {
                autoClose: true,
                autoClose: true,
                view: 'days',
                minView: 'days',
                dateFormat: 'dd/MM/yyyy',
                selectedDates: [new Date(new Date().getFullYear(), new Date().getMonth(), 1)]
                /* //onSelect: GetDataTable*/
            });
            fechaF = new AirDatepicker('#txtAnioF', {
                autoClose: true,
                autoClose: true,
                view: 'days',
                minView: 'days',
                dateFormat: 'dd/MM/yyyy',
                selectedDates: [new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0)]

                /*     onSelect: GetDataTable*/
            });

            function GetReporte(fechaInicial, fechaFinal) {
                var customStore = new DevExpress.data.CustomStore({
                    load: function (loadOptions) {
                        var d = $.Deferred();
                        $.ajax({
                            type: 'GET',
                            url: '@Url.Action("GetReporteSemaforo")',
                            contentType: "application/json; charset=utf-8",
                            dataType: 'json',
                            data: { fechaInicial, fechaFinal },
                            cache: false,
                            success: function (data) {

                                /* console.log(data);*/
                                var state = data["State"];
                                if (state == 1) {
                                    data = JSON && JSON.parse(JSON.stringify(data)) || $.parseJSON(data);

                                    d.resolve(data);

                                }
                                else if (state == -1)
                                    alert(data["Message"])
                            },
                            error: function (jqXHR, exception) {
                                getErrorMessage(jqXHR, exception);
                            }
                        });
                        return d.promise();
                    }
                });
                salesPivotGrid = $("#gridContainer").dxDataGrid({
                    dataSource: new DevExpress.data.DataSource(customStore),
                    showBorders: true,
                    loadPanel: {
                        text: "Cargando..."
                    },
                    scrolling: {
                        useNative: false,
                        scrollByContent: true,
                        scrollByThumb: true,
                        showScrollbar: "always" // or "onScroll" | "always" | "never"
                    },
                    searchPanel: {
                        visible: true,
                        width: 200,
                        placeholder: "Buscar..."
                    },
                    headerFilter: {
                        visible: true
                    },
                    columnAutoWidth: true,
                    export: {
                        enabled: true
                    },
                    onExporting: function (e) {
                        var workbook = new ExcelJS.Workbook();
                        var worksheet = workbook.addWorksheet('Hoja 1');
                        DevExpress.excelExporter.exportDataGrid({
                            worksheet: worksheet,
                            component: e.component,
                            customizeCell: function (options) {
                                var excelCell = options;
                                excelCell.font = { name: 'Arial', size: 12 };
                                excelCell.alignment = { horizontal: 'left' };
                                excelCell.columnCount;
                            }
                        }).then(function () {
                            workbook.xlsx.writeBuffer().then(function (buffer) {
                                saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'REPORTE DE VENTAS.xlsx');
                            });
                        });
                        e.cancel = true;
                    },
                    columns: [
                        {
                            dataField: "ESTADO",
                            caption: "ESTADO",
                            visible:false
                        },
                        {
                            dataField: "NIT",
                            caption: "NIT"
                        },
                        {
                            dataField: "NOMBRE",
                            caption: "CLIENTE"
                        },
                        {
                            dataField: "MONTO",
                            caption: "TOTAL DE COMPRAS",
                            dataType: "number",
                            format: { type: 'fixedPoint', precision: 2 }
                        },
                        {
                            dataField: "DESCRIPCION",
                            caption: "FRECUENCIA DE COMPRA",
                            alignment: "center",
                            cellTemplate: function (container, options) {
                                var fieldData = options.data;
                                if (fieldData.ESTADO == 3) {
                                    $("<span>").addClass('bg-success fw-bold m-2').text(fieldData.DESCRIPCION).appendTo(container);
                                }
                                else if (fieldData.ESTADO == 2) {
                                    $("<span>").addClass('bg-warning fw-bold m-2').text(fieldData.DESCRIPCION).appendTo(container);
                                }
                                else {
                                    $("<span>").addClass('bg-danger fw-bold m-2').text(fieldData.DESCRIPCION).appendTo(container);
                                }
                            }
                        }
                    ],
                    onRowDblClick: function (e) {
                        console.log(e.data["DESCRIPCION"]);
                    },
                    onCellPrepared: function (container, options) {
                        console.log(options);
                        //console.log(objectotest.row.data.ESTADO);
                        /*
                        if (e.key['ESTADO'] === 3) {
                            e.cellElement.css("background", "#77DD77");
                            e.cellElement.css("color", "#FFFFFF");
                        }
                        else if (e.key['ESTADO']=== 2) {
                            e.cellElement.css("background", "#FDFD96");
                            e.cellElement.css("color", "#FFFFFF");
                        }
                        else {
                            e.cellElement.css("background", "#FF6961");
                            e.cellElement.css("color", "#FFFFFF");
                        }
                        */
                    }
                }).dxDataGrid('instance');
            }

            /*----------------------------boton informe-----------------------------*/
            $('#botonInforme').on('click', function (e) {
                e.preventDefault();
                if (fechaI.lastSelectedDate != undefined && fechaF.lastSelectedDate != undefined) {
                    let fechaInicial = DateFormat(fechaI.lastSelectedDate);
                    let fechaFinal = DateFormat(fechaF.lastSelectedDate);
                    GetReporte(fechaInicial, fechaFinal);
                }
                else {
                    ShowAlertMessage('warning', 'EL INGRESO DE AMBAS FECHAS ES OBLIGATORIO')
                }
            })
        });
    </script>
}

<div class="card">
    <span class="badge badge-pill badge-secondary">REPORTE POR CLIENTES - FRECUENCIA DE COMPRA</span>
    <div class="card-body">
        <form id="formVentas">
            <div class="row justify-content-center">
                <div class="col-12 col-sm-6 col-md-6 col-lg-6 col-xl-3 pt-1">
                    <div class="input-group text-center">
                        <span class="col-form-label">FECHA INICIAL:</span>
                        <input type="text" class="form-control" id="txtAnioI" name="txtAnioI" required readonly>
                    </div>
                </div>
                <div class="col-12 col-sm-6 col-md-6 col-lg-6 col-xl-3 pt-1">
                    <div class="input-group text-center">
                        <span class="col-form-label">FECHA FINAL:</span>
                        <input type="text" class="form-control" id="txtAnioF" name="txtAnioF" required readonly>
                    </div>
                </div>
                <div class="col-12 col-sm-6 col-md-6 col-lg-6 col-xl-3 pt-1 text-center">
                    <button class="btn btn-secondary" id="botonInforme"><i class="far fa-filter"></i> GENERAR REPORTE</button>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="card">
    <div class="row">
        <div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
            <div id="gridContainer"></div>
        </div>
    </div>
</div>
